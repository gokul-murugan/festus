data "aws_iam_policy_document" "Deny_IAMResource_Creation_Without_Valid_Tag_Keys" {
  statement {

    sid    = "DenyIAMResourceCreationWithoutValidTagKeys"
    effect = "Deny"
    actions = [
      "ec2:RunInstances",
      "autoscaling:CreateAutoScalingGroup",
      "imagebuilder:CreateImagePipeline",
      "imagebuilder:CreateImage",
      "elasticbeanstalk:CreateEnvironment",
      "elasticloadbalancing:CreateloadBalancer",
      "elasticloadbalancing:CreateTargetGroup",
      "lambda:CreateFunction",
      "ecr:CreateRepository",
      "ecr-public:CreateRepository",
      "ecs:CreateCapacityProvider",
      "ecs:CreateService",
      "ecs:CreateCluster",
      "eks:CreateFargateProfile",
      "eks:CreateAddon",
      "eks:CreateNodegroup",
      "eks:CreateCluster",
      "backup:CreateReportPlan",
      "backup:CreateFramework",
      "backup:CreateBackupPlan",
      "backup:CreateBackupVault",
      "elasticfilesystem:CreateFileSystem",
      "elasticfilesystem:CreateAccessPoint",
      "fsx:CreateFileSystem",
      "fsx:CreateBackup",
      "s3:PutStorageLensConfiguration",
      "s3:CreateBucket",
      "dynamodb:CreateTable",
      "dynamodb:CreateBackup",
      "redshift:CreateEventSubscription",
      "redshift:CreateClusterSnapshot",
      "redshift:CreateClusterParameterGroup",
      "redshift:CreateCluster",
      "redshift:CreateClusterSecurityGroup",
      "redshift:CreateClusterSubnetGroup",
      "rds:CreateDBParameterGroup",
      "rds:CreateDBProxyEndpoint",
      "rds:CreateDBSecurityGroup",
      "rds:CreateDBSnapshot",
      "rds:CreateDBCluster",
      "rds:CreateDBInstance",
      "ras:CreateDBProxy",
      "rds:CreateDBClusterSnapshot",
      "rds:CreateDBClusterParameterGroup",
      "rds:CreateOptionGroup",
      "rds:CreateDBSubnetGroup",
      "iam:CreateRole",
      "iam:CreateVirtualMFADevice",
      "iam:CreateSAMLProvider",
      "iam:CreateUser",
      "iam:CreateOpenIDConnectProvider",
      "ds:CreateDirectory",
      "ds:CreateMicrosoftAD",
      "ds:CreateSnapshot",
      "ram:CreateResourceShare",
      "secretsmanager:CreateSecret",
      "ssm:PutParameter",
      "ssm:CreateMaintenanceWindow",
      "ssm:CreateDocument",
      "ssm:CreatePatchBaseline",
      "acm:Requestertificate",
      "kms:Createkey",
      "cloudformation:CreateStack",
      "cloudformation:CreateStackSet",
      "cloudtrail:CreateTrail",
      "cloudwatch:PutMetricstream",
      "workspaces:CreateWorkspaces",
      "workspaces:CreateConnectionAlias",
      "datasync:CreateLocations3",
      "datasync:CreateLocationFsxWindows",
      "datasync:CreateTask",
      "datasync:CreatelocationEfs",
      "datasync:CreateAgent",
      "datasync:CreateLocationSmb",
      "datasync:CreateLocationFsxLustre",
      "datasync:CreateLocationHdfs",
      "datasyne:CreateLocationobjectStorage",
      "datasync:CreatelocationNfs",
      "dms:CreateReplicationSubnetGroup",
      "dm:CreateEventSubscription",
      "dms:CreateEndpoint",
      "dm:CreateReplicationTask",
      "dms:CreateReplicationInstance",
      "route53:CreateHostedZone",
      "route53resolver:CreateResolverEndpoint",
      "route53resolver:CreateFirewallRuleGroup",
      "route53resolver:CreateFirewallDomainList",
      "routes53resolver:CreateResolverRule",
      "elasticmapreduce:CreateStudio",
      "elasticmapreduce:Createdditor",
      "sns:CreateTopic",
      "ses:CreateContactlist",
      "appstream:CreateAppBlock",
      "appstream:CreateImageBuilder",
      "appstream:Createfleet",
      "appstream:CreateApplication",
      "appstream:CreateStack",
      "cloudformation:CreateStack",
      "cloudformation:CreateStackSet",
    ]
    resources = [
      "*"
    ]

    condition {
      test     = "ForAllValues:StringNotEquals"
      variable = "aws:Tagkeys"
      values = [
        "billingid"
      ]
    }
  }
}