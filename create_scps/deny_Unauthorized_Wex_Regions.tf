data "aws_iam_policy_document" "Deny_Regions_not_appropriate_to_WEX_policy" {
  statement {
   
    sid    = "UnauthorizedWexRegionsdeny"
    effect = "Deny"
    actions = [
      "apigateway:*",
      "a4b:*",
      "amplify:*",
      "appmesh:*",
      "appmesh-preview:*",
      "appconfig:*",
      "appstream:*",
      "appsync:*",
      "application-autoscaling:*",
      "discovery:*",
      "arsenal:*",
      "artifact:*",
      "athena:*",
      "autoscaling-plans:*",
      "backup:*",
      "backup-storage:*",
      "batch:*",
      "acm:*",
      "acm-pca:*",
      "chatbot:*",
      "chime:*",
      "clouddirectory:*",
      "servicediscovery:*",
      "cloud9:*",
      "cloudformation:*",
      "cloudfront:*",
      "cloudhsm:*",
      "cloudsearch:*",
      "cloudwatch:*",
      "applicationinsights:*",
      "logs:*",
      "synthetics:*",
      "codebuild:*",
      "codecommit:*",
      "codedeploy:*",
      "codeguru-profiler:*",
      "codeguru-reviewer:*",
      "codepipeline:*",
      "codestar:*",
      "codestar-notifications:*",
      "cognito-identity:*",
      "cognito-sync:*",
      "cognito-idp:*",
      "comprehend:*",
      "comprehendmedical:*",
      "compute-optimizer:*",
      "connect:*",
      "dbqms:*",
      "dms:*",
      "dataexchange:*",
      "dlm:*",
      "datapipeline:*",
      "datasync:*",
      "deeplens:*",
      "deepracer:*",
      "detective:*",
      "devicefarm:*",
      "ds:*",
      "dynamodb:*",
      "dax:*",
      "autoscaling:*",
      "imagebuilder:*",
      "ec2messages:*",
      "elasticfilesystem:*",
      "elastic-inference:*",
      "eks:*",
      "elasticloadbalancing:*",
      "elasticmapreduce:*",
      "elasticache:*",
      "elasticbeanstalk:*",
      "ebs:*",
      "ecr:*",
      "ecs:*",
      "elastictranscoder:*",
      "es:*",
      "events:*",
      "schemas:*",
      "execute-api:*",
      "fsx:*",
      "firehose:*",
      "fms:*",
      "forecast:*",
      "frauddetector:*",
      "freetos:*",
      "gamelift:*",
      "glacier:*",
      "alobalaccelerator:*",
      "glue:*",
      "groundstation:*",
      "groundtruthlabeling:*",
      "guardduty:*",
      "iq:*",
      "iq-permission:*",
      "importexport:*",
      "inspector:*",
      "iot:*",
      "iot1click:*",
      "iotanalytics:*",
      "iot-device-tester:*",
      "iotevents:*",
      "greengrass:*",
      "iotsitewise:*",
      "iotthingsgraph:*",
      "kms:*",
      "kendra:*",
      "kinesis:*",
      "kinesisanalytics:*",
      "kinesisvideo:*",
      "lakeformation:*",
      "lambda:*",
      "launchwizard:*",
      "lex:*",
      "license-manager:*",
      "lightsail:*",
      "cassandra:*",
      "mg:*",
      "kafka:*",
      "machinetsannina:*",
      "macie:*",
      "managedblockchain:*",
      "aws-marketplace:*",
      "aws-marketplace-management:*",
      "mechanicalturk:*",
      "mediaconnect:*",
      "mediaconvert:*",
      "medialive:*",
      "mediapackage:*",
      "mediapackage-vod:*",
      "mediastore:*",
      "mediatailor:*",
      "mgh:*",
      "mobileanalytics:*",
      "mobilehub:*",
      "neptune-db:*",
      "opsworks:*",
      "opsworks-em:*",
      "outposts:*",
      "pi:*",
      "personalize:*",
      "mobiletargeting:*",
      "ses:*",
      "sms-voice:*",
      "qldb:*",
      "quicksight:*",
      "rds:*",
      "rds-data:*",
      "rds-db:*",
      "redshift:*",
      "rekognition:*",
      "robomaker:*",
      "sns:*",
      "sgs:*",
      "ssmmessages:*",
      "sso:*",
      "sso-directory:*",
      "sts:*",
      "swf:*",
      "sagemaker:*",
      "secretsmanager:*",
      "sms:*",
      "serverlessrepo:*",
      "servicecatalog:*",
      "shield:*",
      "signer:*",
      "sdb:*",
      "snowball:*",
      "states:*",
      "storagegateway:*",
      "sumerian:*",
      "ssm:*",
      "xray:*",
      "workspaces:*",
      "workmailmessageflow*",
      "workmail:*",
      "worklink:*",
      "workdocs:*",
      "wam:*",
      "wafv2:*",
      "waf-regional:*",
      "waf:*",
      "translate:*",
      "transfer:*",
      "transcribe:*",
      "textract:*",
      "ec2:*",
    ]
    resources = [
      "*",
    ]

    condition {
      test     = "StringEquals"
      variable = "aws:RequestedRegion"
      values = [
        "us-east-2",
        "us-west-1",
        "ap-east-1",
        "ap-south-1",
        "ap-northeast-3",
        "ap-northeast-2",
        "ap-northeast-1",
        "ca-central-1",
        "en-north-1",
        "cn-northwest-1",
        "eu-west-2",
        "eu-west-3",
        "eu-north-1",
        "me-south-1",
        "sa-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
      ]
    }
  }
}
